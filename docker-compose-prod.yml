services:
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volume_data/django_static:/vol/static
      - ./volume_data/to_be_served:/to_be_served
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - client
      - api
  certbot:
    restart: always
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  client:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./client
    command: npm start
    depends_on:
      - api

  api:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./api
    env_file:
      - ./secrets/api/.env
    volumes:
      - ./volume_data/django_static:/usr/src/app/vol
    command: ./docker-entrypoint-prod.sh
    depends_on:
      - db
      - redis
      - redis-cache
      - pgbouncer

  celery:
    build:
      dockerfile: Dockerfile
      context: ./api
    env_file:
      - ./secrets/api/.env
    volumes:
      - ./volume_data/django_static:/usr/src/app/vol
    command: celery -A config worker -l info
    depends_on:
      - db
      - redis
      - redis-cache
      - pgbouncer

  celery-beat:
    build:
      dockerfile: Dockerfile
      context: ./api
    env_file:
      - ./secrets/api/.env
    volumes:
      - ./volume_data/django_static:/usr/src/app/vol
    command: celery -A config beat -l info
    depends_on:
      - db
      - redis
      - redis-cache
      - pgbouncer

  celery-flower:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./api
    env_file:
      - ./secrets/api/.env
    volumes:
      - ./volume_data/django_static:/usr/src/app/vol
    command: celery -A config flower --url_prefix=/flower --basic_auth=${CELERY_FLOWER_USER}:${CELERY_FLOWER_PASSWORD}
    depends_on:
      - db
      - redis
      - redis-cache
      - pgbouncer

  pgbouncer:
    image: edoburu/pgbouncer:v1.23.1-p2
    ports:
      - "6432:6432"
    env_file:
      - ./secrets/pgbouncer/.env
    depends_on:
      - db

  db:
    restart: always
    image: postgres:13-alpine
    env_file:
      - ./secrets/db/.env
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./volume_data/pgdata:/var/lib/postgresql/data
      - ./db_backups:/db_backups

  redis:
    image: redis:7.0.4-alpine3.16
    restart: always
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./volume_data/redis_celery_data:/data
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-cache:
    image: redis:7.0.4-alpine3.16
    restart: always
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./volume_data/redis_celery_data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
